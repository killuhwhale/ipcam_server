#  https://medium.com/@gagansh7171/dockerize-your-django-and-react-app-68a7b73ab6e9
version: "3.2"
services:
  # redis:
  #   restart: always
  #   image: redis:5
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - db-net

  # db:
  #   restart: always
  #   image: mariadb:5.5
  #   environment:
  #     - MYSQL_HOST=localhost
  #     - MYSQL_PORT=3306
  #     - MYSQL_ROOT_HOST=%
  #     - MYSQL_DATABASE=bug
  #     - MYSQL_USER=<<username>>
  #     - MYSQL_PASSWORD=<<password>>
  #     - MYSQL_ROOT_PASSWORD=<<rootpassword>>
  #   ports:
  #     - "3302:3306"
  #   networks:
  #     - db-net

  esp32server:
    restart: always
    container_name: djangoAPI
    # command : bash -c "python check_db.py --service-name db --ip db --port 3306 && 
    #                   python manage.py migrate &&
    #                   python manage.py runserver 0.0.0.0:8000"
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    # env_file:
    #   - ./esp32server/settings.ini probably can use another file type....
    build:
      context: ./esp32server/
      dockerfile: Dockerfile
    # ports : port1:port2 tells the container to listen to which port. Port1 can be any unoccupied port but port2 must be the port you would have used if you would be running your app on localhost. To maintain symmetry I have used the same port number on port1 and port2.
    ports:
      - "8000:8000"
    # depends_on:
    #   - db
    #   - redis
    networks:
      - db-net
  # frontend:
  #   restart: always
  #   command : npm start
  #   container_name: front
  #   build:
  #     context: ./frontend/
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   stdin_open: true
  #   depends_on:
  #     - project
  #   networks:
  #     - db-net

networks:
  db-net:
    driver: bridge
